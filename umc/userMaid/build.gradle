group 'org.ace.core'

apply plugin: 'java' //这个不需要解释
apply plugin: 'idea' //grale帮助idea生成一些项目管理文件用的
apply plugin: 'org.ace.gradle.plugin.version' //公司自己编写的包版本控制gradle插件
apply plugin: 'com.bonc.gradle.plugin.mybatisgenerate'

sourceCompatibility = 1.8

/*buildscript 内对依赖的下载地址和gradle需要的插件进行定义*/
buildscript {
    /*配置bonc nexus仓库地址*/
    ext.bonc_nexus_host = "ps.bonc.com.cn" //nexus的地址
    ext.bonc_nexus_repositories = "http://${project.bonc_nexus_host}/nexus/content/groups/public/" //包下载地址
    ext.bonc_nexus_publish = "http://${project.bonc_nexus_host}/nexus/content/repositories/thirdparty" //工程结果发布地址

    /*配置插件下载地址*/
    repositories {
        maven { url project.bonc_nexus_repositories } //bonc的gradle插件仓库
        maven { url "https://plugins.gradle.org/m2/" } //gradle自己的插件仓库
    }

    /*声明gralde插件的依赖*/
    dependencies {
        //version control
        classpath "org.ace.gradle.plugin:version:latest.release" //通过动态版本获取最新的版本控制插件
        classpath "org.ace.gradle.plugin:mybatisGenerate:latest.release" //mybatis扫表工具
    }

    /*配置插件动态版本的缓存时间*/
    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'

        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.name == 'log4j') {
                details.useTarget 'log4j:log4j:1.2.+'
            }
        }
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'org.springframework.boot', module: 'logback-classic'

    }
}

/*配置依赖包动态版本的缓存时间*/
configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

/*配置依赖包地址*/
repositories {
    maven { url project.bonc_nexus_repositories } //bonc的仓库
    mavenCentral() //maven官方仓库
}
/*mybatisgenerate所需*/
configurations {
    mybatisGenerator
}

/*程序编译的依赖包*/
dependencies {

    //工具模板
    compile group: 'com.bonc.core', name: 'utilTemplate', version: 'latest.release'
    //mybatis
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.0'
    compile group: 'tk.mybatis', name: 'mapper', version: '3.3.8'
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.0'

    //spring jdbc
    compile group: 'org.springframework', name: 'spring-jdbc', version: '4.2.6.RELEASE'

    //mysql-driver
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.39'

    /*测试需要的组件*/
    testCompile group: 'junit', name: 'junit', version: '4.12'

    /*测试需要的组件*/
    testCompile('org.springframework.boot:spring-boot-starter-web:1.5.3.RELEASE') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
    }
    testCompile('org.springframework.boot:spring-boot-starter-test:1.5.3.RELEASE') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
    }

    //mybatisGenerator
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.36'
    mybatisGenerator 'tk.mybatis:mapper:3.3.2'

    testCompile group: 'com.alibaba', name: 'druid', version: '1.0.20'
}

/*令javadoc支持中文*/
tasks.withType(Javadoc) {
    options.encoding = "UTF-8"
}

/*版本控制的仓库配置*/
archiveWarehouse {
    url = project.bonc_nexus_publish
    user = "upload"
    password = "1qaz4rfv2wsx3edc"
}